#!/bin/bash

# usage generate_favicon /logo/image.png
generate_favicon() {
  magick convert -resize x16 -gravity center -crop 16x16+0+0 "$1" -flatten -colors 256 -background transparent "$PWD/favicon.ico"
}

npminit() {
  mkdir -p $1
  cd $1
  git init
  npm init -y
  npm i -s typescript
  open -a "Google Chrome" https://github.com/new/
  npx gitignore node
  git add -A
  git commit -m "Initial Commit"
  echo "Please update the remote and then push the code"
}

uuid(){
  uuidvar=$(npx uuid)
  echo $uuidvar
  echo $uuidvar | tr -d '\n' | pbcopy
}

gh_actions(){
    mkdir .github
    mkdir .github/workflows
    touch .github/workflows/deploy.yml
    touch .github/workflows/test.yml
    echo "Done"
}

notify(){
    title="$1"
    message="$2"
    /usr/bin/osascript -e "display notification \"$message\" with title \"$title\" sound name \"Hero\""
}

plan(){
    filename="$(date '+%Y-%m-%d')"
    vim ~/projects/notes/plans/$filename.md
}

1to1(){
    name="$1"
    date="$(date '+%Y-%m-%d')"
    touch ~/projects/notes/1to1/$name-$date.md
    tee -a ~/projects/notes/1to1/$name-$date.md <<EOF
# One to One with $name on $date
    
## Personal prompts to start
* What have you been up to at the weekends?
* How is your family? Kids etc.

## Work Review general
1. How has work been? Have you found it satisfying? Anything frustrating you?

## Career Development
1. Do you feel like you're making progress on your career goals here? Why or why not?
2. Do you have the tools you need to accomplish your goals?
3. How do you feel your progressing on your goals?
4. What are your career goals? (if not known)

## Satisfaction
1. What are you most excited about?
2. What are you most dreading?
3. What motivated you to come to work?
4. What's frustrating you at the moment?
5. What could I do to make your work more enjoyable?

## Team
1. Are there any aspects of the team/culture you'd like to change?
2. How would you rate the communication in the team?
3. How well do you relate to everyone on the team? Always a challenge to do that when not in person
EOF
    vim ~/projects/notes/1to1/$name-$date.md
}

# Source: https://h.daily-dev-tips.com/bash-never-forget-to-git-commit-again
# https://github.com/rebelchris/afterwork
afterwork(){
# Bash script to check which git projects need commiting
# Define dir
DIR=~/Projects/
GITBASED=.git
# Step 1 loop through all folders in a dir
for dir in $DIR*
do
    # Check if we have a directory
    if [[ -d $dir ]]; then
        # Change into working directory
        cd $dir
        # Define empty message variable
        MSG="";
        # Check if directory contains .git folder
        if [ -d "$GITBASED" ]; then
            # Define our test for Git Status
            TEST=$(git status $dir);
            # Check if git status is perfect
            if [[ $TEST == *"nothing to commit"* ]]; then
                MSG=": No changes ✅"
            # Check if git status has unstaged changes
            elif [[ $TEST == *"Changes not staged for commit"* ]]; then
                MSG=": Unstaged changes 🤷‍♂️"
            # Check if git status has uncommitted changes
            elif [[ $TEST == *"Untracked files"* ]]; then
                MSG=": You forgot to commit some files 😡"
            fi 
        else 
            # Not a valid git project
            MSG=": Not a valid git project 👀"
        fi
        echo ${dir##*/}$MSG
        cd ..
    fi
done
echo "All done for today! 🔥"
}
